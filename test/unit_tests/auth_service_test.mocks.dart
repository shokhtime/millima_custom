// Mocks generated by Mockito 5.4.4 from annotations
// in crm_flutter/test/unit_tests/auth_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:crm_flutter/core/network/dio_client.dart' as _i3;
import 'package:crm_flutter/data/services/shared_prefs/token_prefs_service.dart'
    as _i5;
import 'package:dio/dio.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeResponse_0<T> extends _i1.SmartFake implements _i2.Response<T> {
  _FakeResponse_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [DioClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockDioClient extends _i1.Mock implements _i3.DioClient {
  MockDioClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Response<dynamic>> get({
    required String? url,
    Map<String, dynamic>? queryParams,
    _i2.Options? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [],
          {
            #url: url,
            #queryParams: queryParams,
            #options: options,
          },
        ),
        returnValue:
            _i4.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #get,
            [],
            {
              #url: url,
              #queryParams: queryParams,
              #options: options,
            },
          ),
        )),
      ) as _i4.Future<_i2.Response<dynamic>>);

  @override
  _i4.Future<_i2.Response<dynamic>> post({
    required String? url,
    Map<String, dynamic>? data,
    _i2.FormData? formData,
    _i2.Options? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [],
          {
            #url: url,
            #data: data,
            #formData: formData,
            #options: options,
          },
        ),
        returnValue:
            _i4.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #post,
            [],
            {
              #url: url,
              #data: data,
              #formData: formData,
              #options: options,
            },
          ),
        )),
      ) as _i4.Future<_i2.Response<dynamic>>);

  @override
  _i4.Future<_i2.Response<dynamic>> put({
    required String? url,
    required Map<String, dynamic>? data,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [],
          {
            #url: url,
            #data: data,
          },
        ),
        returnValue:
            _i4.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #put,
            [],
            {
              #url: url,
              #data: data,
            },
          ),
        )),
      ) as _i4.Future<_i2.Response<dynamic>>);

  @override
  _i4.Future<_i2.Response<dynamic>> delete({required String? url}) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [],
          {#url: url},
        ),
        returnValue:
            _i4.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #delete,
            [],
            {#url: url},
          ),
        )),
      ) as _i4.Future<_i2.Response<dynamic>>);
}

/// A class which mocks [TokenPrefsService].
///
/// See the documentation for Mockito's code generation for more information.
class MockTokenPrefsService extends _i1.Mock implements _i5.TokenPrefsService {
  MockTokenPrefsService() {
    _i1.throwOnMissingStub(this);
  }
}
